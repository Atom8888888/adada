from re import match
import nextcord
from nextcord.ext import commands
import requests
import json
import os
import aiohttp
import datetime

from myserver import server_on


config = json.load(open('config.json'))

intents = nextcord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix='!',intents=intents,help_command=None)

async def logsend(embed):
  async with aiohttp.ClientSession() as session:
    webhook = nextcord.Webhook.from_url(config['webhook'], session=session)
    await webhook.send(embed=embed)

class Topup(nextcord.ui.Modal):
    def __init__(self):
        super().__init__("‡πÇ‡∏î‡πÄ‡∏ô‡∏ó‡∏ú‡πà‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ã‡∏≠‡∏á‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤")  
        self.topup = nextcord.ui.TextInput(
            label="‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏±‡∏á‡πÄ‡∏õ‡∏≤ (‡∏´‡πâ‡∏≤‡∏°‡∏°‡∏µ‡∏ï‡∏±‡∏ß # ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏•‡∏¥‡∏á‡∏Ñ‡πå)",
            placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏ã‡∏≠‡∏á‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤üí∏üí∞ | URL",
            required=True
        )
        self.add_item(self.topup)
    async def callback(self, interaction: nextcord.Interaction):
        redeemfaile = nextcord.Embed(title=" ", description=f"`‚ùå ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à` `|` ‡∏Ñ‡∏∏‡∏ì <@{interaction.user.id}> \n **{self.topup.value}**",color=0xFF0000)
        redeemfaile.timestamp = datetime.datetime.utcnow()
        if (not match (r"https:\/\/gift\.truemoney\.com\/campaign\/\?v=+[a-zA-Z0-9]{18}", self.topup.value)):
           await interaction.send(f"‡∏ï‡∏•‡∏Å‡∏´‡∏£‡∏≠‡πÑ‡∏≠‡∏™‡∏±‡∏™‡∏ô‡∏£‡∏Å‡∏´‡∏°‡∏≤‡πÄ‡∏¢‡πá‡∏î‡πÄ‡πÄ‡∏°‡πà‡∏Ñ‡∏ß‡∏¢‡πÑ‡∏£‡∏≠‡πà‡∏∞‡∏™‡∏±‡∏™‡∏à‡∏∞‡∏î‡πà‡∏≤‡∏Å‡∏∞‡∏Å‡∏π‡∏õ‡∏∞", ephemeral = True) 
           await logsend(embed=redeemfaile)
           return
        voucher_code = self.topup.value.split("?v=")[1]
        headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/8a0.0.3987.149 Safari/537.36'}
        response = requests.post(f'https://gift.truemoney.com/campaign/vouchers/{voucher_code}/redeem', headers=headers, json={"mobile": config['phone'], "voucher_hash": f"{voucher_code}"})
        redeemdata = response.json()
        amount = redeemdata['data']['tickets'][0]['amount_baht']
        if response.status_code == 200 and redeemdata["status"]["code"] == "SUCCESS" :
            f = open('./db/db.json')
            db = json.load(f)
            db["money"] += float(amount)
            db["count"] += 1
            json.dump(db, open("./db/db.json", "w"), indent = 4)
            redeemdone = nextcord.Embed(title=" ", description=f"`‚úÖ ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à` `|` ‡∏Ñ‡∏∏‡∏ì <@{interaction.user.id}> ‡πÇ‡∏î‡πÄ‡∏ô‡∏ó‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô {amount} ‡∏ö‡∏≤‡∏ó\n **{self.topup.value}**\n‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ã‡∏≠‡∏á‡πÇ‡∏î‡∏¢ : `{redeemdata['data']['owner_profile']['full_name']}`",color=0x00FF00)
            redeemdone.timestamp = datetime.datetime.utcnow()
            await logsend(embed=redeemdone)
            if amount >= config['money']:
               if config['addrole'] == 'off':
                pass  
               else:
                role = nextcord.utils.get(interaction.guild.roles, id=int(config['roleid']))
                if role in interaction.user.roles:
                    await interaction.send(f"‡∏°‡∏µ‡∏¢‡∏®‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß", ephemeral = True)
                else:
                    role_id = config['roleid']
                    await interaction.send(f"‡πÉ‡∏´‡πâ‡∏¢‡∏® <@&{role_id}> ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", ephemeral = True)
                    role = interaction.guild.get_role(int(role_id))
                    await interaction.user.add_roles(role)
                    await interaction.guild.get_channel(config['notify_channel_id']).send(embed=nextcord.Embed(description=f'{interaction.user.mention} ‡πÇ‡∏î‡πÄ‡∏ô‡∏ó‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à {amount} ‡∏ö‡∏≤‡∏ó\n\n**‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏¢‡∏®**\n‚Ä¢ <@&{role_id}>',color=0x00FF00))
        if response.status_code ==  400 or response.status_code == 404:
            await interaction.send(f"‡∏ã‡∏≠‡∏á‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‡∏´‡∏£‡∏∑‡∏≠ ‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ", ephemeral = True)
            await logsend(embed=redeemfaile)

class Button(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @nextcord.ui.button(label="‡∏Å‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ã‡∏∑‡πâ‡∏≠‡∏¢‡∏®", style=nextcord.ButtonStyle.blurple, emoji="üßß",custom_id="donate")
    async def donate(self, button: nextcord.Button, interaction: nextcord.Interaction):
                await interaction.response.send_modal(Topup())



@bot.event
async def on_ready():
    bot.add_view(Button())
    print(f"BOT NAME : {bot.user}")
    await bot.change_presence(activity=nextcord.Streaming(name="!",url="https://www.twitch.tv/zanexywex"))
    

@bot.command(pass_context = True)
async def topup(ctx):
    if ctx.author.guild_permissions.administrator:
            await ctx.message.delete()
            embed = nextcord.Embed(title="üßß ‡∏ã‡∏∑‡πâ‡∏≠‡∏¢‡∏®‡∏ú‡πà‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ã‡∏≠‡∏á‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤ üßß",color=0xFF6961)
            embed.set_image(url="https://media.discordapp.net/attachments/994249006584692816/998162183894618122/unknown.png")
            await ctx.send(embed=embed, view=Button())
    else:
        await ctx.reply('‡∏°‡∏∂‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏±‡∏ö‡πÑ‡∏≠‡πâ‡πÇ‡∏á‡πà')


@bot.command(pass_context = True)
async def check(ctx):
  if ctx.author.guild_permissions.administrator:
    addrole = ''
    if config['addrole'] == 'on':
        addrole = '‡πÄ‡∏õ‡∏¥‡∏î'
    else: 
        addrole = '‡∏õ‡∏¥‡∏î'
    embed = nextcord.Embed(title="‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ö‡∏≠‡∏ó",description=f"‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô : {config['phone']}\n‡πÉ‡∏´‡πâ‡∏¢‡∏®‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏î‡πÄ‡∏ô‡∏ó : {addrole}\n‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏î‡πÄ‡∏ô‡∏ó‡∏ñ‡∏∂‡∏á : {config['money']}\n‡πÑ‡∏≠‡∏î‡∏µ‡∏¢‡∏® : {config['roleid']} ( <@&{config['roleid']}> )")
    await ctx.reply(embed=embed)
  else:
        await ctx.reply('‡∏°‡∏∂‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏±‡∏ö‡πÑ‡∏≠‡πâ‡πÇ‡∏á‡πà')

@bot.command()
async def data(ctx):    
  if ctx.author.guild_permissions.administrator:
    d = open('./db/db.json')
    db = json.load(d)
    embed = nextcord.Embed(title=" ",description=f"**‡∏°‡∏µ‡∏Ñ‡∏ô‡πÇ‡∏î‡πÄ‡∏ô‡∏ó‡∏°‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î `{db['money']}` ‡∏ö‡∏≤‡∏ó**\n**‡∏°‡∏µ‡∏Ñ‡∏ô‡πÇ‡∏î‡πÄ‡∏ô‡∏ó‡∏°‡∏≤ `{db['count']}` ‡∏Ñ‡∏ô**",color=0xFFFF00)
    embed.timestamp = datetime.datetime.utcnow()
    await ctx.send(embed=embed)
  else:
        await ctx.reply('‡∏°‡∏∂‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏±‡∏ö‡πÑ‡∏≠‡πâ‡πÇ‡∏á‡πà')
    
 server_on()    
   
bot.run(os.getenv('token'))